(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{516:function(s,t,a){s.exports=a.p+"assets/img/replication.519f9146.png"},517:function(s,t,a){s.exports=a.p+"assets/img/conn.9fc297db.png"},518:function(s,t,a){s.exports=a.p+"assets/img/sync.b660a2e0.png"},519:function(s,t,a){s.exports=a.p+"assets/img/cachezone.7bb13887.png"},520:function(s,t,a){s.exports=a.p+"assets/img/transmite.3623256f.png"},632:function(s,t,a){"use strict";a.r(t);var e=a(4),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),e("p",[s._v("单机redis的风险与问题")]),s._v(" "),e("ol",[e("li",[s._v("机器故障，如硬盘故障或系统崩溃，造成数据丢失，很有可能对业务造成灾难性的打击")]),s._v(" "),e("li",[s._v("容量瓶颈，内存不足的情况是很常发生的")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[s._v("为了避免单点redis服务器故障，准备多台服务器，互相连通。将数据复制多个副本保存到不同的服务器上，连接到一起，并保证数据是同步的。即使有其中一台服务器宕机，其他服务器依然可以提供服务，实现redis高可用，同时实现数据冗余备份。")])]),s._v(" "),e("center",[e("p",[e("img",{attrs:{src:a(516),alt:"Redis Replication"}})])]),s._v(" "),e("p",[s._v("以上就是主从复制的连接方案，有master负责收据数据，然后同步到slave，由slave提供读取数据的服务，并且一个slave只能对应一个master")]),s._v(" "),e("p",[s._v("但是以上方式还会有问题，一个slave宕机，对整体集群的影响不大，但是如果master宕机了，那集群就不能对外提供写数据的服务，这时候集群会从slave中推选除一个master，用来收集数据。这样就能提供高可用的服务了")]),s._v(" "),e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),e("ul",[e("li",[s._v("读写分离：master写，slave读，提高服务器的读写能力")]),s._v(" "),e("li",[s._v("负载均衡：基于主从结构，配合读写分离，由slave分担master负载，并根据需求的变化，改变slave的数量，通过多个从节点分担数据读取负载，提高redis服务并发量与数据吞吐量")]),s._v(" "),e("li",[s._v("故障恢复：当master出现问题，由slave提供服务，实现快速的故障恢复")]),s._v(" "),e("li",[s._v("数据冗余：实现数据热备份，是持久化之外的另一种数据冗余方式")])]),s._v(" "),e("h2",{attrs:{id:"工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[s._v("#")]),s._v(" 工作流程")]),s._v(" "),e("p",[s._v("主从复制过程可以分为3个阶段：")]),s._v(" "),e("h3",{attrs:{id:"_1-建立连接阶段（由slave连接master）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-建立连接阶段（由slave连接master）"}},[s._v("#")]),s._v(" 1.建立连接阶段（由slave连接master）")]),s._v(" "),e("p",[s._v("建立slave到master的连接，使master能够识别slave，并保存slave端口号")]),s._v(" "),e("center",[e("p",[e("img",{attrs:{src:a(517),alt:"Redis Replication"}})])]),s._v(" "),e("p",[s._v("以上就是连接的步骤。")]),s._v(" "),e("p",[s._v("主从连接的操作由如下几种：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("客户端发送命令"),e("br"),s._v(" "),e("code",[s._v("slaveof <masterip> <masterport>")]),s._v("\n如果master配置密码的话则需要使用命令\n"),e("code",[s._v("config set masterauth password")])])]),s._v(" "),e("li",[e("p",[s._v("服务器启动参数"),e("br"),s._v(" "),e("code",[s._v("redis-server --slaveof <masterip> <masterport>")])])]),s._v(" "),e("li",[e("p",[s._v("服务器配置"),e("br"),s._v(" "),e("code",[s._v("slaveof <masterip> <masterport>")]),e("br"),s._v("\n配置文件配置"),e("br"),s._v(" "),e("code",[s._v("masterauth password")])])])]),s._v(" "),e("p",[s._v("当然，还有很多方式，比如docker，docker-compose和k8s等\n由于测试的时候使用两个虚拟机docker测试，使用docker-compose 启动，修改command命令即可")]),s._v(" "),e("ul",[e("li",[s._v("主从断开连接"),e("br"),s._v(" "),e("code",[s._v("slaveof no one")])])]),s._v(" "),e("p",[s._v("slave系统信息")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replication")]),s._v("\nrole:slave\nmaster_host:192.168.83.16\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:9\nmaster_sync_in_progress:0\nslave_repl_offset:70\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:55e97ffcc89f1610164d2d7fac0d96a08a30c635\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:70\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:70\n")])])]),e("p",[s._v("master系统信息")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replication")]),s._v("\nrole:master\nconnected_slaves:1\nslave0:ip"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".83.15,port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(",state"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("online,offset"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("112")]),s._v(",lag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nmaster_replid:55e97ffcc89f1610164d2d7fac0d96a08a30c635\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:112\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:112\n")])])]),e("p",[s._v("当slave中的信息role为slave且master_link_status:up说明通信成功")]),s._v(" "),e("h3",{attrs:{id:"_2-数据同步阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据同步阶段"}},[s._v("#")]),s._v(" 2.数据同步阶段")]),s._v(" "),e("p",[s._v("slave通过指令请求数据，master接收指令后执行"),e("code",[s._v("bgsave")]),s._v("，但是此时会出现一个问题，就是接收到新的set指令，这样rdb的数据是没有当前新数据的，为了解决这个问题，master在第一个slave连接的时候会在执行"),e("code",[s._v("bgsave")]),s._v("指令同时创建一个命令缓冲区。然后将生成的rdb文件通过连接阶段的socket发送到slave。slave接收到RDB文件后，清空当前数据并执行RDB文件的恢复过程。这个过程叫做全量复制。")]),s._v(" "),e("p",[s._v("全量复制完成后，slave发送命令告知masterRDB恢复已经完成，master接收到后发送复制缓冲区的aof文件，并记录当前发送的aof指令的数量，保证数据完整性。slave接收到文件后执行bgrewriteaof恢复数据，这个阶段叫做部分复制（增量复制）")]),s._v(" "),e("center",[e("p",[e("img",{attrs:{src:a(518),alt:"Redis Sync"}})])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.058 * Full resync requested by replica "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".83.15:6379 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#slave请求同步数据")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.058 * Replication backlog created, my new replication IDs are "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'55e97ffcc89f1610164d2d7fac0d96a08a30c635'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0000000000000000000000000000000000000000'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.058 * Starting BGSAVE "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" SYNC with target: disk \n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.062 * Background saving started by pid "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开始bgsave")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":C 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.083 * DB saved on disk \n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":C 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.085 * RDB: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" MB of memory used by copy-on-write\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.144 * Background saving terminated with success "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bgsave完成")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":M 02 Dec "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":39:48.145 * Synchronization with replica "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".83.15:6379 succeeded "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#同步完成")]),s._v("\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("master注意")]),s._v(" "),e("ol",[e("li",[s._v("如果master数据量巨大，数据同步阶段应避开流量高峰期，避免造成master阻塞，影响业务正常执行")]),s._v(" "),e("li",[s._v("复制缓冲区大小设置不合理，会导致数据溢出。如进行全量复制周期太长，进行部分复制时发现数据已经存在丢失的情况，必须进行第二次全量复制，致使slave陷入死循环状态。")]),s._v(" "),e("li",[s._v("master单机内存占用主机内存的比例不应过大，建议使用50%-70%，留下部分内存用于执行bgsave命令和创建复制缓冲区")])])]),s._v(" "),e("p",[s._v("设置复制缓冲区配置文件为："),e("br"),s._v(" "),e("code",[s._v("repl-backlog-size 1mb")])]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("slave注意")]),s._v(" "),e("ol",[e("li",[s._v("为避免slave进行全量复制、部分复制时服务器响应阻塞或数据不同步，建议关闭此期间的对外服务")]),s._v(" "),e("li",[s._v("如果多个slave同时对master请求数据同步，master发送的RDB文件增多，会对带宽造成巨大冲击，造成master带宽不足，因此数据同步需要根据业务实际需求适量错峰")]),s._v(" "),e("li",[s._v("slave过多时，建议调整拓扑结构，由一主多从结构变为树状结构，中间的节点即是master，也是slave。注意使用树状结构时，由于层级深度，导致深度越高的slave与最顶层的master之间的数据同步延迟较大，数据一致性变差，应该谨慎选择")])])]),s._v(" "),e("p",[s._v("设置slave在复制阶段关闭对外服务："),e("br"),s._v(" "),e("code",[s._v("slave-serve-stable-data yes|no")])]),s._v(" "),e("h3",{attrs:{id:"_3-命令传播阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-命令传播阶段"}},[s._v("#")]),s._v(" 3.命令传播阶段")]),s._v(" "),e("p",[s._v("当master数据库状态被修改后，导致主从服务器数据库状态不一致，此时需要让主从数据同步到一致的状态，同步状态的动作就称为命令传播。")]),s._v(" "),e("p",[s._v("master将接收到的数据命令发送给slave，slave接收到命令后执行")]),s._v(" "),e("p",[s._v("如果命令传播阶段出现了断网现象")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("情况")]),s._v(" "),e("th",[s._v("方案")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("网络闪断闪连")]),s._v(" "),e("td",[s._v("忽略")])]),s._v(" "),e("tr",[e("td",[s._v("短时间网络中断")]),s._v(" "),e("td",[s._v("部分复制")])]),s._v(" "),e("tr",[e("td",[s._v("长时间网络中断")]),s._v(" "),e("td",[s._v("全量复制")])])])]),s._v(" "),e("p",[s._v("部分复制在上面的同步阶段其实简略了一些内容，在这里将进行补充。部分复制最主要的核心内容有： "),e("strong",[s._v("Redis服务器运行id、主服务器的复制缓冲区、主从服务器的复制偏移量")]),s._v("。")]),s._v(" "),e("ul",[e("li",[s._v("服务器运行ID(runid)"),e("br"),s._v("\n服务器运行ID是每一个redis服务运行的身份识别码，一台服务器多次运行将生成不同的ID。用于redis服务器之间的身份识别。")]),s._v(" "),e("li",[s._v("复制缓冲区"),e("br"),s._v("\n在主从结构中，master通过指令传播的方式去同步slave的数据。但是如果在某一时刻，在传输过程中，有一台slave网络发生故障，没有接收到master发送的命令，那将会造成数据和其他slave不一致的情况。数据缓冲区最主要的功能就是解决这个问题。")])]),s._v(" "),e("p",[s._v("复制缓冲区，又成为复制积压缓冲区，是一个先进先出的队列，用于存储服务器执行过的命令，每次传播命令，master都会将复制缓冲区的传播的命令记录下来。")]),s._v(" "),e("center",[e("p",[e("img",{attrs:{src:a(519),alt:"Redis Cache Zone"}})])]),s._v(" "),e("p",[s._v("如下：")]),s._v(" "),e("ol",[e("li",[s._v("接收到指令后，master将指令放入复制缓冲区，复制缓冲区将指令转换成AOF文件格式后存入")]),s._v(" "),e("li",[s._v("以Bitmaps类似的存储结构作为队列存储，特别注意的是，如果缓冲区的大小不够存储新进入的指令，将会将队尾的数据出队，造成数据丢失的问题，这样又会进行全量复制，占用资源性能。")]),s._v(" "),e("li",[s._v("队列中每个单位都包含偏移量和字节量，偏移量作为指令存储的位置，字节量存储AOF优化后的指令单个字节。")])]),s._v(" "),e("ul",[e("li",[s._v("主从服务器偏移量(offset)\n描述复制缓冲区中的指令字节位置。master中的offset：记录发送给所有slave的指令字节对应的位置（多个） slave中的offset：记录slave接收master发送过来的指令字节对应的位置（一个）\n主要用于在主从结构中，当slave断线后，恢复数据。")])]),s._v(" "),e("p",[s._v("当客户端存储的offset和master中存储的offset发现不对应的时候，就会将缺失部分的数据发送给slave")]),s._v(" "),e("p",[s._v("那什么时候去发送需要同步数据的指令呢？")]),s._v(" "),e("h3",{attrs:{id:"心跳检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#心跳检测"}},[s._v("#")]),s._v(" 心跳检测")]),s._v(" "),e("p",[s._v("这个就要涉及到"),e("strong",[s._v("心跳检测")]),s._v("的问题："),e("br"),s._v("\n当进入命令传播阶段，master与slave间需要进行信息交换，使用心跳机制进行维护，实现双方连接保持在线。")]),s._v(" "),e("p",[s._v("master心跳：指令PING，由配置"),e("code",[s._v("repl-ping-salve-period")]),s._v("决定，默认10秒，由"),e("code",[s._v("info replication中lag判断")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" info replication\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replication")]),s._v("\nrole:master\nconnected_slaves:1\nslave0:ip"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".83.15,port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(",state"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("online,offset"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),s._v(",lag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nmaster_replid:1b7aabb98518506530a737cb81bd526766be5815\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:84\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:84\n")])])]),e("p",[s._v("当lag为0或1是为正常，表示最后一次连接时间间隔。主要用于判断slave是否在线")]),s._v(" "),e("p",[s._v("slave心跳：指令REPLCONF ACK [offset] 周期为1秒，用于汇报给master当前slave的复制偏移量，获取罪行数据变更指令，也可以判断master是否还在线。")]),s._v(" "),e("p",[s._v("数据同步和命令传播阶段的详细整体流程如下：")]),s._v(" "),e("center",[e("p",[e("img",{attrs:{src:a(520),alt:"Redis Sync"}})])]),s._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),e("h3",{attrs:{id:"_1-频繁的全量复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-频繁的全量复制"}},[s._v("#")]),s._v(" 1.频繁的全量复制")]),s._v(" "),e("p",[s._v("伴随着系统的运行，master的数据量越来越大，一旦master重启，runid将会发生变化，导致全部的slave都发生全量复制操作。\nredis内部优化调整方案：")]),s._v(" "),e("ol",[e("li",[s._v("master内部创建master_repid变量，使用runid相同的策略生成，长度为41位，并发送给所有slave")]),s._v(" "),e("li",[s._v("在master关闭时执行"),e("code",[s._v("shutdown save")]),s._v("，进行RDB持久化，将runid和offset保存到RDB文件中，通过"),e("code",[s._v("redis-check-rdb <rdb-file-name>")]),s._v("命令可以查看RDB文件中的信息")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("root@40fab0fe84af:/data"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis-check-rdb dump.rdb")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Checking RDB "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" dump.rdb\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD redis-ver "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'6.0.9'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD redis-bits "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'64'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("52")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD ctime "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1607415669'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("67")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD used-mem "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1936048'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("85")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD repl-stream-db "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("135")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD repl-id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1b7aabb98518506530a737cb81bd526766be5815'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("150")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD repl-offset "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("166")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" AUX FIELD aof-preamble "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("168")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Selecting DB ID "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("592")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Checksum OK\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("offset "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("592")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("o/ RDB looks OK"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("o/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" keys "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" expires\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" already expired\n")])])]),e("p",[s._v("其中的repl-id和repl-offset就是记录的当前runid和offset\n3. master重启后加载RDB文件恢复数据，将repl-id和repl-offset加载到内存中。")]),s._v(" "),e("p",[s._v("由于master保存了runid，所以所有slave认为还是之前的master")]),s._v(" "),e("p",[s._v("还有一种情况是，slave网络中断，由于master复制缓冲区过于小，重新上线的slave中的offset越界，触发全量复制。这个时候要重新修改缓冲区大小"),e("code",[s._v("repl-backlog-size")])]),s._v(" "),e("h3",{attrs:{id:"_2-频繁的网络中断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-频繁的网络中断"}},[s._v("#")]),s._v(" 2.频繁的网络中断")]),s._v(" "),e("p",[s._v("masterCPU占用过高或者slave频繁断开")]),s._v(" "),e("p",[s._v("当slave每秒发送REPLCONF ACK指令时，突然接收到了慢查询（keys *，hgetall等）会占用大量的CPU性能，这时候master每秒调用复制定时函数replicationCron()，发现这个slave长时间没有响应，然后就一直调用。会占用master的资源和连接。所以要设置合理的超时时间，确认是否释放slave。"),e("code",[s._v("repl-timeout")]),s._v(" 默认为60秒，超过60秒没响应，释放slave")]),s._v(" "),e("h3",{attrs:{id:"_3-数据不一致"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据不一致"}},[s._v("#")]),s._v(" 3.数据不一致")]),s._v(" "),e("p",[s._v("由于网络信息不同步，发送数据有延迟，多个slave获取相同的数据可能不同步。可以优化主从间的网络环境，通常放置在一个机房部署，使用云服务器时要注意机房地区。还可以监控主从节点延迟（通过offset）判断，如果slave延迟大，暂时屏蔽程序对该slave的数据访问"),e("code",[s._v("slave-serve-stale-data yser|no")]),s._v(" 开启后仅会响应info、slaveof等少数命令")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("总结")]),s._v(" "),e("ul",[e("li",[s._v("三个阶段 连接阶段-数据同步阶段-命令传播阶段")]),s._v(" "),e("li",[s._v("三个核心 runid、复制缓冲区、offset")]),s._v(" "),e("li",[s._v("心跳机制")])])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);