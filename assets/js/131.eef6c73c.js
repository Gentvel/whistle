(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{700:function(e,s,t){"use strict";t.r(s);var a=t(4),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"一、centos7-升级内核版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、centos7-升级内核版本"}},[e._v("#")]),e._v(" 一、Centos7 升级内核版本")]),e._v(" "),t("h3",{attrs:{id:"_1-1-查看当前内核版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-查看当前内核版本"}},[e._v("#")]),e._v(" 1.1 查看当前内核版本")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#3.10.0-514.el7.x86_64")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -a\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#Linux k8s-leader 3.10.0-514.el7.x86_64 #1 SMP Tue Nov 22 16:42:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /etc/redhat-release \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#CentOS Linux release 7.3.1611 (Core) ")]),e._v("\n")])])]),t("h3",{attrs:{id:"_1-2-升级内核"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-升级内核"}},[e._v("#")]),e._v(" 1.2 升级内核")]),e._v(" "),t("p",[e._v("更新yum源仓库")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("yum -y update\n")])])]),t("p",[e._v("启用 ELRepo 仓库\nELRepo 仓库是基于社区的用于企业级 Linux 仓库，提供对 RedHat Enterprise (RHEL) 和 其他基于 RHEL的 Linux 发行版（CentOS、Scientific、Fedora 等）的支持。\nELRepo 聚焦于和硬件相关的软件包，包括文件系统驱动、显卡驱动、网络驱动、声卡驱动和摄像头驱动等。")]),e._v(" "),t("p",[e._v("#导入ELRepo仓库的公共密钥")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rpm")]),e._v(" --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#安装ELRepo仓库的yum源")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rpm")]),e._v(" -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm\n")])])]),t("h3",{attrs:{id:"_1-3-查看可用的系统内核包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-查看可用的系统内核包"}},[e._v("#")]),e._v(" 1.3 查看可用的系统内核包")]),e._v(" "),t("p",[e._v("可以看到4.4和4.18两个版本")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("yum --disablerepo"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v(" --enablerepo"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"elrepo-kernel"')]),e._v(" list available\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * elrepo-kernel: mirrors.tuna.tsinghua.edu.cn\nelrepo-kernel                                                                                                                                                                 "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.9")]),e._v(" kB  00:00:00     \nelrepo-kernel/primary_db                                                                                                                                                      "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.8")]),e._v(" MB  00:00:03     \nAvailable Packages\nelrepo-release.noarch                                   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7.0")]),e._v("-5.el7.elrepo                           elrepo-kernel\nkernel-lt.x86_64                                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-devel.x86_64                                  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-doc.noarch                                    "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-headers.x86_64                                "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-tools.x86_64                                  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-tools-libs.x86_64                             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-lt-tools-libs-devel.x86_64                       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.4")]),e._v(".233-1.el7.elrepo                       elrepo-kernel\nkernel-ml.x86_64                                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-devel.x86_64                                  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-doc.noarch                                    "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-headers.x86_64                                "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-tools.x86_64                                  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-tools-libs.x86_64                             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nkernel-ml-tools-libs-devel.x86_64                       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\nperf.x86_64                                             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\npython-perf.x86_64                                      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo                         elrepo-kernel\n")])])]),t("h3",{attrs:{id:"_1-4-安装最新版本内核"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-安装最新版本内核"}},[e._v("#")]),e._v(" 1.4 安装最新版本内核")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("yum --enablerepo"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("elrepo-kernel "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" kernel-ml\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# --enablerepo 选项开启 CentOS 系统上的指定仓库。默认开启的是 elrepo，这里用 elrepo-kernel 替换。")]),e._v("\n")])])]),t("h3",{attrs:{id:"_1-5-设置-grub2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-设置-grub2"}},[e._v("#")]),e._v(" 1.5 设置 grub2")]),e._v(" "),t("p",[e._v("内核安装好后，需要设置为默认启动选项并重启后才会生效")]),e._v(" "),t("p",[e._v("查看系统上的所有可用内核：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" -F"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("' "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'$1=="menuentry " {print i++ " : " $2}\'')]),e._v(" /etc/grub2.cfg\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#0 : CentOS Linux (4.18.7-1.el7.elrepo.x86_64) 7 (Core)")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#1 : CentOS Linux (3.10.0-862.11.6.el7.x86_64) 7 (Core)")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#2 : CentOS Linux (3.10.0-514.el7.x86_64) 7 (Core)")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#3 : CentOS Linux (0-rescue-063ec330caa04d4baae54c6902c62e54) 7 (Core)")]),e._v("\n")])])]),t("p",[e._v("设置新的内核为grub2的默认版本\n服务器上存在4 个内核，我们要使用 4.18 这个版本，可以通过 grub2-set-default 0 命令或编辑 /etc/default/grub 文件来设置")]),e._v(" "),t("h4",{attrs:{id:"方法1、通过-grub2-set-default-0-命令设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法1、通过-grub2-set-default-0-命令设置"}},[e._v("#")]),e._v(" 方法1、通过 grub2-set-default 0 命令设置")]),e._v(" "),t("p",[e._v("其中 0 是上面查询出来的可用内核")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("grub2-set-default "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),t("h4",{attrs:{id:"方法2、编辑-etc-default-grub-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法2、编辑-etc-default-grub-文件"}},[e._v("#")]),e._v(" 方法2、编辑 /etc/default/grub 文件")]),e._v(" "),t("p",[e._v("设置 GRUB_DEFAULT=0，通过上面查询显示的编号为 0 的内核作为默认内核：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("vim")]),e._v(" /etc/default/grub\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_TIMEOUT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_DISTRIBUTOR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'s, release .*$,,g'")]),e._v(" /etc/system-release"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_DEFAULT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_DISABLE_SUBMENU")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_TERMINAL_OUTPUT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"console"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_CMDLINE_LINUX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"crashkernel=auto rd.lvm.lv=cl/root rhgb quiet"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GRUB_DISABLE_RECOVERY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"true"')]),e._v("\n")])])]),t("p",[e._v("生成 grub 配置文件并重启")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("grub2-mkconfig -o /boot/grub2/grub.cfg\nGenerating grub configuration "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nFound linux image: /boot/vmlinuz-4.18.7-1.el7.elrepo.x86_64\nFound initrd image: /boot/initramfs-4.18.7-1.el7.elrepo.x86_64.img\nFound linux image: /boot/vmlinuz-3.10.0-862.11.6.el7.x86_64\nFound initrd image: /boot/initramfs-3.10.0-862.11.6.el7.x86_64.img\nFound linux image: /boot/vmlinuz-3.10.0-514.el7.x86_64\nFound initrd image: /boot/initramfs-3.10.0-514.el7.x86_64.img\nFound linux image: /boot/vmlinuz-0-rescue-063ec330caa04d4baae54c6902c62e54\nFound initrd image: /boot/initramfs-0-rescue-063ec330caa04d4baae54c6902c62e54.img\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("reboot")]),e._v("\n")])])]),t("h3",{attrs:{id:"_1-6-验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-验证"}},[e._v("#")]),e._v(" 1.6 验证")]),e._v(" "),t("p",[e._v("reboot后验证")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" -r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#4.18.7-1.el7.elrepo.x86_64")]),e._v("\n")])])]),t("h3",{attrs:{id:"_1-7-删除旧内核（可选）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-删除旧内核（可选）"}},[e._v("#")]),e._v(" 1.7 删除旧内核（可选）")]),e._v(" "),t("p",[e._v("查看系统中全部的内核：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rpm")]),e._v(" -qa "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" kernel\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kernel-3.10.0-514.el7.x86_64")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kernel-ml-4.18.7-1.el7.elrepo.x86_64")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kernel-tools-libs-3.10.0-862.11.6.el7.x86_64")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kernel-tools-3.10.0-862.11.6.el7.x86_64")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kernel-3.10.0-862.11.6.el7.x86_64")]),e._v("\n")])])]),t("h4",{attrs:{id:"方法1、yum-remove-删除旧内核的-rpm-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法1、yum-remove-删除旧内核的-rpm-包"}},[e._v("#")]),e._v(" 方法1、yum remove 删除旧内核的 RPM 包")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("yum remove kernel-3.10.0-514.el7.x86_64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nkernel-tools-libs-3.10.0-862.11.6.el7.x86_64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nkernel-tools-3.10.0-862.11.6.el7.x86_64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nkernel-3.10.0-862.11.6.el7.x86_64\n")])])]),t("h4",{attrs:{id:"方法2、yum-utils-工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法2、yum-utils-工具"}},[e._v("#")]),e._v(" 方法2、yum-utils 工具")]),e._v(" "),t("p",[e._v("如果安装的内核不多于 3 个，yum-utils 工具不会删除任何一个。只有在安装的内核大于 3 个时，才会自动删除旧内核。")]),e._v(" "),t("p",[e._v("安装yum-utils")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" yum-utils\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#删除旧版本　　")]),e._v("\npackage-cleanup --oldkernels\n")])])]),t("h2",{attrs:{id:"二、安装-kubernetes-集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-kubernetes-集群"}},[e._v("#")]),e._v(" 二、安装 Kubernetes 集群")]),e._v(" "),t("h3",{attrs:{id:"_2-1-检查-centos-hostname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-检查-centos-hostname"}},[e._v("#")]),e._v(" 2.1 检查 centos / hostname")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 master 节点和 worker 节点都要执行")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /etc/redhat-release\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 此处 hostname 的输出将会是该机器在 Kubernetes 集群中的节点名字")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 不能使用 localhost 作为节点的名字")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("hostname")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 请使用 lscpu 命令，核对 CPU 信息")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Architecture: x86_64    本安装文档不支持 arm 架构")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# CPU(s):       2         CPU 内核数量不能低于 2")]),e._v("\nlscpu\n")])])]),t("h4",{attrs:{id:"_2-1-1-操作系统兼容性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-操作系统兼容性"}},[e._v("#")]),e._v(" 2.1.1 操作系统兼容性")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("CentOS 版本")]),e._v(" "),t("th",[e._v("本文档是否兼容")]),e._v(" "),t("th",[e._v("备注")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("7.8")]),e._v(" "),t("td",[e._v("😄")]),e._v(" "),t("td",[e._v("已验证")])]),e._v(" "),t("tr",[t("td",[e._v("7.7")]),e._v(" "),t("td",[e._v("😄")]),e._v(" "),t("td",[e._v("已验证")])]),e._v(" "),t("tr",[t("td",[e._v("7.6")]),e._v(" "),t("td",[e._v("😄")]),e._v(" "),t("td",[e._v("已验证")])]),e._v(" "),t("tr",[t("td",[e._v("7.5")]),e._v(" "),t("td",[e._v("😞")]),e._v(" "),t("td",[e._v("已证实会出现 kubelet 无法启动的问题")])]),e._v(" "),t("tr",[t("td",[e._v("7.4")]),e._v(" "),t("td",[e._v("😞")]),e._v(" "),t("td",[e._v("已证实会出现 kubelet 无法启动的问题")])]),e._v(" "),t("tr",[t("td",[e._v("7.3")]),e._v(" "),t("td",[e._v("😞")]),e._v(" "),t("td",[e._v("已证实会出现 kubelet 无法启动的问题")])]),e._v(" "),t("tr",[t("td",[e._v("7.2")]),e._v(" "),t("td",[e._v("😞")]),e._v(" "),t("td",[e._v("已证实会出现 kubelet 无法启动的问题")])])])]),e._v(" "),t("h4",{attrs:{id:"_2-1-2-修改-hostname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-修改-hostname"}},[e._v("#")]),e._v(" 2.1.2 修改 hostname")]),e._v(" "),t("p",[e._v("如果您需要修改 hostname，可执行如下指令：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 修改 hostname")]),e._v("\nhostnamectl set-hostname your-new-host-name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看修改结果")]),e._v("\nhostnamectl status\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置 hostname 解析")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"127.0.0.1   '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("hostname")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/hosts\n")])])]),t("h4",{attrs:{id:"_2-1-3-检查网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-检查网络"}},[e._v("#")]),e._v(" 2.1.3 检查网络")]),e._v(" "),t("p",[e._v("在所有节点执行命令")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@k8s-leader ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ip")]),e._v(" route show\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#default via 192.168.83.1 dev ens33 proto static metric 100 ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#192.168.83.0/24 dev ens33 proto kernel scope link src 192.168.83.11 metric 100 ")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@k8s-leader ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ip")]),e._v(" address\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    inet 127.0.0.1/8 scope host lo")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       valid_lft forever preferred_lft forever")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    inet6 ::1/128 scope host ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       valid_lft forever preferred_lft forever")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    link/ether 00:0c:29:da:6c:65 brd ff:ff:ff:ff:ff:ff")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    inet 192.168.83.11/24 brd 192.168.83.255 scope global noprefixroute ens33")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       valid_lft forever preferred_lft forever")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    inet6 fe80::2402:dfd2:eab2:573/64 scope link noprefixroute ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       valid_lft forever preferred_lft forever")]),e._v("\n\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("kubelet使用的IP地址")]),e._v(" "),t("p",[t("code",[e._v("ip route show")]),e._v("命令中，可以知道机器的默认网卡，通常是 eth0，如 default via 172.21.0.23 dev eth0 如果vmware环境下一般为ens33"),t("br"),e._v(" "),t("code",[e._v("ip address")]),e._v(" 命令中，可显示默认网卡的 IP 地址，Kubernetes 将使用此 IP 地址与集群内的其他节点通信，如 172.17.216.80"),t("br"),e._v("\n所有节点上 Kubernetes 所使用的 IP 地址必须可以互通（无需 NAT 映射、无安全组或防火墙隔离）")])]),e._v(" "),t("h3",{attrs:{id:"_2-2-安装docker及kubelet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-安装docker及kubelet"}},[e._v("#")]),e._v(" 2.2 安装docker及kubelet")]),e._v(" "),t("p",[e._v("请认真核对如下选项，7个都符合再安装。")]),e._v(" "),t("p",[e._v("😄 我的任意节点 centos 版本为 7.6 / 7.7 或 7.8"),t("br"),e._v("\n😄 我的任意节点 CPU 内核数量大于等于 2，且内存大于等于 4G"),t("br"),e._v("\n😄 我的任意节点 hostname 不是 localhost，且不包含下划线、小数点、大写字母"),t("br"),e._v("\n😄 我的任意节点都有固定的内网 IP 地址"),t("br"),e._v("\n😄 我的任意节点都只有一个网卡，如果有特殊目的，可以在完成 K8S 安装后再增加新的网卡"),t("br"),e._v("\n😄 我的任意节点上 Kubelet使用的 IP 地址 可互通（无需 NAT 映射即可相互访问），且没有防火墙、安全组隔离"),t("br"),e._v("\n😄 我的任意节点不会直接使用 docker run 或 docker-compose 运行容器")]),e._v(" "),t("h4",{attrs:{id:"_2-2-1-快速安装（推荐）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-快速安装（推荐）"}},[e._v("#")]),e._v(" 2.2.1 快速安装（推荐）")]),e._v(" "),t("p",[e._v("docker hub 镜像请根据自己网络的情况任选一个")]),e._v(" "),t("ul",[t("li",[e._v("第四行为腾讯云 docker hub 镜像")]),e._v(" "),t("li",[e._v("第六行为DaoCloud docker hub 镜像")]),e._v(" "),t("li",[e._v("第八行为华为云 docker hub 镜像")]),e._v(" "),t("li",[e._v("第十行为阿里云 docker hub 镜像")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 leader 节点和 worker 节点都要执行")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 最后一个参数 1.18.6 用于指定 kubenetes 版本，支持所有 1.18.x 版本的安装")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 腾讯云 docker hub 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# export REGISTRY_MIRROR="https://mirror.ccs.tencentyun.com"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# DaoCloud 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# export REGISTRY_MIRROR="http://f1361db2.m.daocloud.io"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 华为云镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# export REGISTRY_MIRROR="https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 阿里云 docker hub 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# export REGISTRY_MIRROR=https://registry.cn-hangzhou.aliyuncs.com")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sSL https://kuboard.cn/install-script/v1.18.x/install_kubelet.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -s "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.18")]),e._v(".8\n")])])]),t("h4",{attrs:{id:"_2-2-2-手动安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-手动安装"}},[e._v("#")]),e._v(" 2.2.2 手动安装")]),e._v(" "),t("p",[e._v("docker hub 镜像请根据自己网络的情况任选一个")]),e._v(" "),t("ul",[t("li",[e._v("第四行为腾讯云 docker hub 镜像")]),e._v(" "),t("li",[e._v("第六行为DaoCloud docker hub 镜像")]),e._v(" "),t("li",[e._v("第八行为阿里云 docker hub 镜像")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 leader 节点和 worker 节点都要执行")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 最后一个参数 1.18.6 用于指定 kubenetes 版本，支持所有 1.18.x 版本的安装")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 腾讯云 docker hub 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# export REGISTRY_MIRROR="https://mirror.ccs.tencentyun.com"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# DaoCloud 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# export REGISTRY_MIRROR="http://f1361db2.m.daocloud.io"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 阿里云 docker hub 镜像")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("REGISTRY_MIRROR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://registry.cn-hangzhou.aliyuncs.com\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[e._v("#!/bin/bash")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 leader 节点和 worker 节点都要执行")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 docker")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 参考文档如下")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://docs.docker.com/install/linux/docker-ce/centos/ ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://docs.docker.com/install/linux/linux-postinstall/")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 卸载旧版本")]),e._v("\nyum remove -y "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-client-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-ce-cli "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-common "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-latest-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-selinux "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-engine-selinux "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndocker-engine\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置 yum repository")]),e._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y yum-utils "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\ndevice-mapper-persistent-data "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nlvm2\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装并启动 docker")]),e._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y docker-ce-19.03.8 docker-ce-cli-19.03.8 containerd.io\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\nsystemctl start "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 nfs-utils")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 必须先安装 nfs-utils 才能挂载 nfs 网络存储")]),e._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y nfs-utils\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 关闭 防火墙")]),e._v("\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 关闭 SeLinux")]),e._v("\nsetenforce "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s/SELINUX=enforcing/SELINUX=disabled/g"')]),e._v(" /etc/selinux/config\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 关闭 swap")]),e._v("\nswapoff -a\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("yes")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" /etc/fstab /etc/fstab_bak\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /etc/fstab_bak "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v swap "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/fstab\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 修改 /etc/sysctl.conf")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果有配置，则修改")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.ipv6.conf.all.disable_ipv6.*#net.ipv6.conf.all.disable_ipv6=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.ipv6.conf.default.disable_ipv6.*#net.ipv6.conf.default.disable_ipv6=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.ipv6.conf.lo.disable_ipv6.*#net.ipv6.conf.lo.disable_ipv6=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^net.ipv6.conf.all.forwarding.*#net.ipv6.conf.all.forwarding=1#g"')]),e._v("  /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 可能没有，追加")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.ipv4.ip_forward = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.bridge.bridge-nf-call-ip6tables = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.bridge.bridge-nf-call-iptables = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.ipv6.conf.all.disable_ipv6 = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.ipv6.conf.default.disable_ipv6 = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.ipv6.conf.lo.disable_ipv6 = 1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"net.ipv6.conf.all.forwarding = 1"')]),e._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 执行命令以应用")]),e._v("\nsysctl -p\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 配置K8S的yum源")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/yum.repos.d/kubernetes.repo")]),e._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 卸载旧版本")]),e._v("\nyum remove -y kubelet kubeadm kubectl\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装kubelet、kubeadm、kubectl")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将 ${1} 替换为 kubernetes 版本号，例如 1.17.2")]),e._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y kubelet-"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${1}")]),e._v(" kubeadm-"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${1}")]),e._v(" kubectl-"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${1}")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 修改docker Cgroup Driver为systemd")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# # 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# # 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果不修改，在添加 worker 节点时可能会碰到如下错误")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". ')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Please follow the guide at https://kubernetes.io/docs/setup/cri/")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g"')]),e._v(" /usr/lib/systemd/system/docker.service\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置 docker 镜像，提高 docker 镜像下载速度和稳定性")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果您访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sSL https://kuboard.cn/install-script/set_mirror.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -s "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REGISTRY_MIRROR}")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 重启 docker，并启动 kubelet")]),e._v("\nsystemctl daemon-reload\nsystemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" kubelet "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" systemctl start kubelet\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" version\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[e._v("如果此时执行 service status kubelet 命令，将得到 kubelet 启动失败的错误提示，请忽略此错误，因为必须完成后续步骤中 kubeadm init 的操作，kubelet 才能正常启动")])]),e._v(" "),t("p",[e._v("验证")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("--------请检查下面输出结果中的 Registry Mirrors 是否已经修改过来-------- \n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" info\nClient:\n Debug Mode: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n\nServer:\n Containers: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  Running: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  Paused: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  Stopped: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n Images: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n Server Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("19.03")]),e._v(".8\n Storage Driver: overlay2\n  Backing Filesystem: "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("unknown"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  Supports d_type: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n  Native Overlay Diff: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n Logging Driver: json-file\n Cgroup Driver: systemd\n Plugins:\n  Volume: "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v("\n  Network: bridge "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("host")]),e._v(" ipvlan macvlan null overlay\n  Log: awslogs fluentd gcplogs gelf journald json-file "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v(" logentries splunk syslog\n Swarm: inactive\n Runtimes: runc\n Default Runtime: runc\n Init Binary: docker-init\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\n init version: fec3683\n Security Options:\n  seccomp\n   Profile: default\n Kernel Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo.x86_64\n Operating System: CentOS Linux "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n OSType: linux\n Architecture: x86_64\n CPUs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n Total Memory: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(".915GiB\n Name: k8s-leader\n ID: 2PXC:YUNB:G5YK:ZZWD:SLGB:FAXI:AZES:OP2W:IMYD:UCBW:EEO3:75Z2\n Docker Root Dir: /var/lib/docker\n Debug Mode: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n Registry: https://index.docker.io/v1/\n Labels:\n Experimental: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n Insecure Registries:\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.0/8\n Registry Mirrors:\n  https://registry.cn-hangzhou.aliyuncs.com/\n Live Restore Enabled: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n\nCreated symlink from /etc/systemd/system/multi-user.target.wants/kubelet.service to /usr/lib/systemd/system/kubelet.service.\nClient: Docker Engine - Community\n Version:           "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("19.03")]),e._v(".8\n API version:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.40")]),e._v("\n Go version:        go1.12.17\n Git commit:        afacb8b\n Built:             Wed Mar "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("11")]),e._v(" 01:27:04 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v("\n OS/Arch:           linux/amd64\n Experimental:      "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n\nServer: Docker Engine - Community\n Engine:\n  Version:          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("19.03")]),e._v(".8\n  API version:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.40")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("minimum version "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  Go version:       go1.12.17\n  Git commit:       afacb8b\n  Built:            Wed Mar "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("11")]),e._v(" 01:25:42 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v("\n  OS/Arch:          linux/amd64\n  Experimental:     "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n containerd:\n  Version:          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v(".13\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\n runc:\n  Version:          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.0")]),e._v(".0-rc10\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\n docker-init:\n  Version:          "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.18")]),e._v(".0\n  GitCommit:        fec3683\n")])])]),t("h3",{attrs:{id:"_2-3-初始化-leader-节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-初始化-leader-节点"}},[e._v("#")]),e._v(" 2.3 初始化 leader 节点")]),e._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[e._v("关于初始化时用到的环境变量")]),e._v(" "),t("ul",[t("li",[e._v("APISERVER_NAME 不能是 leader 的 hostname")]),e._v(" "),t("li",[e._v("APISERVER_NAME 必须全为小写字母、数字、小数点，不能包含减号")]),e._v(" "),t("li",[e._v("POD_SUBNET 所使用的网段不能与 master节点/worker节点 所在的网段重叠。该字段的取值为一个 CIDR 值，如果您对 CIDR 这个概念还不熟悉，请仍然执行 export POD_SUBNET=10.100.0.1/16 命令，不做修改")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在 leader 节点执行")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 替换 x.x.x.x 为 leader 节点实际 IP（请使用内网 IP）")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MASTER_IP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("x.x.x.x   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 192.168.83.11")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 替换 apiserver.demo 为 您想要的 dnsName")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("APISERVER_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("k8s.vm\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("POD_SUBNET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.100")]),e._v(".0.1/16\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MASTER_IP}")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${APISERVER_NAME}")]),e._v('"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/hosts\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sSL https://kuboard.cn/install-script/v1.18.x/init_master.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -s "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.18")]),e._v(".8\n")])])]),t("h3",{attrs:{id:"_2-4-初始化worker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-初始化worker"}},[e._v("#")]),e._v(" 2.4 初始化worker")]),e._v(" "),t("h4",{attrs:{id:"_2-4-1-获得-join命令参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-获得-join命令参数"}},[e._v("#")]),e._v(" 2.4.1 获得 join命令参数")]),e._v(" "),t("p",[e._v("在 master 节点上执行")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在 master 节点执行")]),e._v("\nkubeadm token create --print-join-command\n")])])]),t("p",[e._v("可获取kubeadm join 命令及参数，如下所示")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# kubeadm token create 命令的输出")]),e._v("\nkubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("join")]),e._v(" apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("有效时间")]),e._v(" "),t("p",[e._v("该 token 的有效时间为 2 个小时，2小时内，您可以使用此 token 初始化任意数量的 worker 节点。")])]),e._v(" "),t("h4",{attrs:{id:"_2-4-2-针对所有的-worker-节点执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-针对所有的-worker-节点执行"}},[e._v("#")]),e._v(" 2.4.2 针对所有的 worker 节点执行")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在 worker 节点执行")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 替换 x.x.x.x 为 master 节点的内网 IP")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MASTER_IP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".83.11\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("APISERVER_NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("k8s.vm\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MASTER_IP}")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${APISERVER_NAME}")]),e._v('"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/hosts\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 替换为 master 节点上 kubeadm token create 命令的输出")]),e._v("\nkubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("join")]),e._v(" apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n\n")])])]),t("h3",{attrs:{id:"_2-5-检查初始化结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-检查初始化结果"}},[e._v("#")]),e._v(" 2.5 检查初始化结果")]),e._v(" "),t("p",[e._v("在 master 节点上执行")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在 master 节点执行")]),e._v("\nkubectl get nodes -o wide\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 输出结果如下所示：")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@k8s-leader ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# kubectl get nodes -o wide")]),e._v("\nNAME          STATUS   ROLES    AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION              CONTAINER-RUNTIME\nk8s-leader    Ready    master   98m   v1.18.8   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".83.11   "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("        CentOS Linux "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo.x86_64   docker://19.3.8\nk8s-worker1   Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("   23m   v1.18.8   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".83.12   "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("        CentOS Linux "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo.x86_64   docker://19.3.8\nk8s-worker2   Ready    "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("   73m   v1.18.8   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".83.13   "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("        CentOS Linux "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Core"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5.8")]),e._v(".3-1.el7.elrepo.x86_64   docker://19.3.8\n")])])]),t("h3",{attrs:{id:"_2-6-设置节点role"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-设置节点role"}},[e._v("#")]),e._v(" 2.6 设置节点role")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("kubectl label "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" k8s-worker2 node-role.kubernetes.io/worker"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("worker\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);