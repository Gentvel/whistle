(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{627:function(t,v,_){"use strict";_.r(v);var e=_(4),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"一、key通用操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、key通用操作"}},[t._v("#")]),t._v(" 一、key通用操作")]),t._v(" "),_("p",[t._v("key是一个字符串，通过key获取redis中保存的数据")]),t._v(" "),_("div",{staticClass:"language-shell extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" del sset "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除指定key")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exists sset "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询key是否存在")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" news "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取key类型")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n")])])]),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("DEL key")]),t._v(" "),_("td",[t._v("该命令用于在 key 存在时删除 key。")])]),t._v(" "),_("tr",[_("td",[t._v("DUMP key")]),t._v(" "),_("td",[t._v("序列化给定 key ，并返回被序列化的值。")])]),t._v(" "),_("tr",[_("td",[t._v("EXISTS key")]),t._v(" "),_("td",[t._v("检查给定 key 是否存在。")])]),t._v(" "),_("tr",[_("td",[t._v("EXPIRE key seconds")]),t._v(" "),_("td",[t._v("为给定 key 设置过期时间，以秒计。")])]),t._v(" "),_("tr",[_("td",[t._v("EXPIREAT key timestamp")]),t._v(" "),_("td",[t._v("EXPIREAT 的作用和 EXPIRE 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)。")])]),t._v(" "),_("tr",[_("td",[t._v("PEXPIRE key milliseconds")]),t._v(" "),_("td",[t._v("设置 key 的过期时间以毫秒计。")])]),t._v(" "),_("tr",[_("td",[t._v("PEXPIREAT key milliseconds-timestamp")]),t._v(" "),_("td",[t._v("设置 key 过期时间的时间戳(unix timestamp) 以毫秒计")])]),t._v(" "),_("tr",[_("td",[t._v("KEYS pattern")]),t._v(" "),_("td",[t._v("查找所有符合给定模式( pattern)的 key 。")])]),t._v(" "),_("tr",[_("td",[t._v("MOVE key db")]),t._v(" "),_("td",[t._v("将当前数据库的 key 移动到给定的数据库 db 当中。")])]),t._v(" "),_("tr",[_("td",[t._v("PERSIST key")]),t._v(" "),_("td",[t._v("移除 key 的过期时间，key 将持久保持。")])]),t._v(" "),_("tr",[_("td",[t._v("PTTL key")]),t._v(" "),_("td",[t._v("以毫秒为单位返回 key 的剩余的过期时间。")])]),t._v(" "),_("tr",[_("td",[t._v("TTL key")]),t._v(" "),_("td",[t._v("以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。")])]),t._v(" "),_("tr",[_("td",[t._v("RANDOMKEY")]),t._v(" "),_("td",[t._v("从当前数据库中随机返回一个 key 。")])]),t._v(" "),_("tr",[_("td",[t._v("RENAME key newkey")]),t._v(" "),_("td",[t._v("修改 key 的名称")])]),t._v(" "),_("tr",[_("td",[t._v("RENAMENX key newkey")]),t._v(" "),_("td",[t._v("仅当 newkey 不存在时，将 key 改名为 newkey 。")])]),t._v(" "),_("tr",[_("td",[t._v("SCAN cursor [MATCH pattern] [COUNT count]")]),t._v(" "),_("td",[t._v("迭代数据库中的数据库键。")])]),t._v(" "),_("tr",[_("td",[t._v("TYPE key")]),t._v(" "),_("td",[t._v("返回 key 所储存的值的类型。")])])])]),t._v(" "),_("h2",{attrs:{id:"二、数据库操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、数据库操作"}},[t._v("#")]),t._v(" 二、数据库操作")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("BGREWRITEAOF")]),t._v(" "),_("td",[t._v("异步执行一个 AOF（AppendOnly File） 文件重写操作")])]),t._v(" "),_("tr",[_("td",[t._v("BGSAVE")]),t._v(" "),_("td",[t._v("在后台异步保存当前数据库的数据到磁盘")])]),t._v(" "),_("tr",[_("td",[t._v("CLIENT KILL [ip:port] [ID client-id]")]),t._v(" "),_("td",[t._v("关闭客户端连接")])]),t._v(" "),_("tr",[_("td",[t._v("CLIENT LIST")]),t._v(" "),_("td",[t._v("获取连接到服务器的客户端连接列表")])]),t._v(" "),_("tr",[_("td",[t._v("CLIENT GETNAME")]),t._v(" "),_("td",[t._v("获取连接的名称")])]),t._v(" "),_("tr",[_("td",[t._v("CLIENT PAUSE timeout")]),t._v(" "),_("td",[t._v("在指定时间内终止运行来自客户端的命令")])]),t._v(" "),_("tr",[_("td",[t._v("CLIENT SETNAME connection-name")]),t._v(" "),_("td",[t._v("设置当前连接的名称")])]),t._v(" "),_("tr",[_("td",[t._v("CLUSTER SLOTS")]),t._v(" "),_("td",[t._v("获取集群节点的映射数组")])]),t._v(" "),_("tr",[_("td",[t._v("COMMAND")]),t._v(" "),_("td",[t._v("获取 Redis 命令详情数组")])]),t._v(" "),_("tr",[_("td",[t._v("COMMAND COUNT")]),t._v(" "),_("td",[t._v("获取 Redis 命令总数")])]),t._v(" "),_("tr",[_("td",[t._v("COMMAND GETKEYS")]),t._v(" "),_("td",[t._v("获取给定命令的所有键")])]),t._v(" "),_("tr",[_("td",[t._v("TIME")]),t._v(" "),_("td",[t._v("返回当前服务器时间")])]),t._v(" "),_("tr",[_("td",[t._v("COMMAND INFO command-name [command-name ...]")]),t._v(" "),_("td",[t._v("获取指定 Redis 命令描述的数组")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG GET parameter")]),t._v(" "),_("td",[t._v("获取指定配置参数的值")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG REWRITE")]),t._v(" "),_("td",[t._v("对启动 Redis 服务器时所指定的 redis.conf 配置文件进行改写")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG SET parameter value")]),t._v(" "),_("td",[t._v("修改 redis 配置参数，无需重启")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG RESETSTAT")]),t._v(" "),_("td",[t._v("重置 INFO 命令中的某些统计数据")])]),t._v(" "),_("tr",[_("td",[t._v("DBSIZE")]),t._v(" "),_("td",[t._v("返回当前数据库的 key 的数量")])]),t._v(" "),_("tr",[_("td",[t._v("DEBUG OBJECT key")]),t._v(" "),_("td",[t._v("获取 key 的调试信息")])]),t._v(" "),_("tr",[_("td",[t._v("DEBUG SEGFAULT")]),t._v(" "),_("td",[t._v("让 Redis 服务崩溃")])]),t._v(" "),_("tr",[_("td",[t._v("FLUSHALL")]),t._v(" "),_("td",[t._v("删除所有数据库的所有key")])]),t._v(" "),_("tr",[_("td",[t._v("FLUSHDB")]),t._v(" "),_("td",[t._v("删除当前数据库的所有key")])]),t._v(" "),_("tr",[_("td",[t._v("INFO [section]")]),t._v(" "),_("td",[t._v("获取 Redis 服务器的各种信息和统计数值")])]),t._v(" "),_("tr",[_("td",[t._v("LASTSAVE")]),t._v(" "),_("td",[t._v("返回最近一次 Redis 成功将数据保存到磁盘上的时间，以 UNIX 时间戳格式表示")])]),t._v(" "),_("tr",[_("td",[t._v("MONITOR")]),t._v(" "),_("td",[t._v("实时打印出 Redis 服务器接收到的命令，调试用")])]),t._v(" "),_("tr",[_("td",[t._v("ROLE")]),t._v(" "),_("td",[t._v("返回主从实例所属的角色")])]),t._v(" "),_("tr",[_("td",[t._v("SAVE")]),t._v(" "),_("td",[t._v("同步保存数据到硬盘")])]),t._v(" "),_("tr",[_("td",[t._v("SHUTDOWN [NOSAVE] [SAVE]")]),t._v(" "),_("td",[t._v("异步保存数据到硬盘，并关闭服务器")])]),t._v(" "),_("tr",[_("td",[t._v("SLAVEOF host port")]),t._v(" "),_("td",[t._v("将当前服务器转变为指定服务器的从属服务器(slave server)")])]),t._v(" "),_("tr",[_("td",[t._v("SLOWLOG subcommand [argument]")]),t._v(" "),_("td",[t._v("管理 redis 的慢日志")])]),t._v(" "),_("tr",[_("td",[t._v("SYNC")]),t._v(" "),_("td",[t._v("用于复制功能(replication)的内部命令")])])])]),t._v(" "),_("h2",{attrs:{id:"三、连接命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、连接命令"}},[t._v("#")]),t._v(" 三、连接命令")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("AUTH password")]),t._v(" "),_("td",[t._v("验证密码是否正确")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG SET requirepass < password>")]),t._v(" "),_("td",[t._v("配置密码")])]),t._v(" "),_("tr",[_("td",[t._v("CONFIG GET requirepass")]),t._v(" "),_("td",[t._v("查看密码")])]),t._v(" "),_("tr",[_("td",[t._v("ECHO message")]),t._v(" "),_("td",[t._v("打印字符串")])]),t._v(" "),_("tr",[_("td",[t._v("PING")]),t._v(" "),_("td",[t._v("查看服务是否运行")])]),t._v(" "),_("tr",[_("td",[t._v("QUIT")]),t._v(" "),_("td",[t._v("关闭当前连接")])]),t._v(" "),_("tr",[_("td",[t._v("SELECT index")]),t._v(" "),_("td",[t._v("切换到指定的数据库")])])])]),t._v(" "),_("h2",{attrs:{id:"四、脚本命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、脚本命令"}},[t._v("#")]),t._v(" 四、脚本命令")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("EVAL script numkeys key [key ...] arg [arg ...]")]),t._v(" "),_("td",[t._v("执行 Lua 脚本。")])]),t._v(" "),_("tr",[_("td",[t._v("EVALSHA sha1 numkeys key [key ...] arg [arg ...]")]),t._v(" "),_("td",[t._v("执行 Lua 脚本。")])]),t._v(" "),_("tr",[_("td",[t._v("SCRIPT EXISTS script [script ...]")]),t._v(" "),_("td",[t._v("查看指定的脚本是否已经被保存在缓存当中。")])]),t._v(" "),_("tr",[_("td",[t._v("SCRIPT FLUSH")]),t._v(" "),_("td",[t._v("从脚本缓存中移除所有脚本。")])]),t._v(" "),_("tr",[_("td",[t._v("SCRIPT KILL")]),t._v(" "),_("td",[t._v("杀死当前正在运行的 Lua 脚本。")])]),t._v(" "),_("tr",[_("td",[t._v("SCRIPT LOAD script")]),t._v(" "),_("td",[t._v("将脚本 script 添加到脚本缓存中，但并不立即执行这个脚本。")])])])]),t._v(" "),_("h2",{attrs:{id:"五、配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、配置"}},[t._v("#")]),t._v(" 五、配置")]),t._v(" "),_("h3",{attrs:{id:"基础配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础配置"}},[t._v("#")]),t._v(" 基础配置")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("设置服务器以守护进程的方式运行"),_("br"),t._v(" "),_("code",[t._v("daemonize yes|no")]),_("br"),t._v("\ndaemonize:yes ：在该模式下，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中，此时redis将一直运行，除非手动kill该进程。"),_("br"),t._v("\ndaemonize:no ：当daemonize选项设置成no时，当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具(putty,xshell等)都会导致redis进程退出。")])]),t._v(" "),_("li",[_("p",[t._v("绑定主机地址"),_("br"),t._v(" "),_("code",[t._v("bind 127.0.0.1")]),_("br"),t._v("\n绑定了主机地址后，客户端只能通过该ip访问，如果不绑定可以通过比如localhost访问，")])]),t._v(" "),_("li",[_("p",[t._v("设置服务器端口"),_("br"),t._v(" "),_("code",[t._v("port 6379")])])]),t._v(" "),_("li",[_("p",[t._v("设置数据库数量"),_("br"),t._v(" "),_("code",[t._v("databases 16")])])]),t._v(" "),_("li",[_("p",[t._v("设置数据库密码"),_("br"),t._v(" "),_("code",[t._v("requirepass <password>")])])])]),t._v(" "),_("p",[t._v("protected-mode yes时，不设置密码只能进行本地连接，设置密码以后可以外网连接。\nprotected-mode no时，不设置密码也可以外网连接。")]),t._v(" "),_("h3",{attrs:{id:"日志配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日志配置"}},[t._v("#")]),t._v(" 日志配置")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("设置服务器以指定的日志记录级别"),_("br"),t._v(" "),_("code",[t._v("loglevel debug|verbose|notice|warning")]),_("br"),t._v("\n日志级别开发期设置为verbose即可（默认），生产环境中配置为notice，简化日志输出量，降低写日志的IO频度")])]),t._v(" "),_("li",[_("p",[t._v("记录日志文件名"),_("br"),t._v(" "),_("code",[t._v("logfile 端口号.log")])])])]),t._v(" "),_("h3",{attrs:{id:"客户端配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端配置"}},[t._v("#")]),t._v(" 客户端配置")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("设置统一时间最大客户端连接数，默认无限制。当客户端达到上限，redis会关闭新的连接"),_("br"),t._v(" "),_("code",[t._v("maxclients 0")])])]),t._v(" "),_("li",[_("p",[t._v("客户端限制等待最大时长，达到最大值后关闭连接。 关闭该功能设置为0即可"),_("br"),t._v(" "),_("code",[t._v("timeout 300")])])])]),t._v(" "),_("h3",{attrs:{id:"多服务器快捷配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多服务器快捷配置"}},[t._v("#")]),t._v(" 多服务器快捷配置")]),t._v(" "),_("ul",[_("li",[t._v("导入并加载指定配置文件信息，用于快速创建redis公共配置较多的redis实例配置文件，便于维护"),_("br"),t._v(" "),_("code",[t._v("include /path/server-端口号.conf")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);