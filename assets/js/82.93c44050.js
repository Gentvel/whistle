(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{633:function(s,t,e){"use strict";e.r(t);var a=e(4),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("高级数据类型是为了解决特定的问题而产生的。")]),s._v(" "),e("h2",{attrs:{id:"bitmaps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bitmaps"}},[s._v("#")]),s._v(" Bitmaps")]),s._v(" "),e("p",[s._v("在开发当中可能会遇到统计一些年度最佳数据，月度最佳数据，周最佳数据等，一般情况下最先能想到的就是使用数据库查询。这种非黑即白的数据，可以使用计算机中最小存储单位bit作为存储方式，一般计算机一个bit有8个位，可以根据位判断某一个数据是否为真或者假。\n比如：统计全班人的性别  0100 0010， 0000 0000 ....\nbitmaps表示就如上，1表示男，其它表示女，第一位表示学号为1的学员，以此类推。\n但是这样又会产生一个问题，那就是设值和取值不方便。但对于我们使用redis来说，取值只要知道数据中的为止即可，设值需要知道位置和修改的结果。")]),s._v(" "),e("h3",{attrs:{id:"基础操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础操作"}},[s._v("#")]),s._v(" 基础操作")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("获取指定key对应偏移量上的bit值"),e("br"),s._v(" "),e("code",[s._v("getbit key offset")])])]),s._v(" "),e("li",[e("p",[s._v("设置指定key对应偏移量上的bit值，value只能是0或1"),e("br"),s._v(" "),e("code",[s._v("setbit key offset 0|1")])])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit bit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置值")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getbit bit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取值")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getbit bit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取不存在的值会返回0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getbit bit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取不存在的值会返回0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit bit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当设置位数比较大的时候，需要在前面补0，这样的操作比较耗时")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),e("h3",{attrs:{id:"拓展操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展操作"}},[s._v("#")]),s._v(" 拓展操作")]),s._v(" "),e("p",[s._v("现在有一个业务场景是视频网站需求")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("统计每天某视频是否被点播"),e("br"),s._v("\n假如某视频的id为6，位图的值为01001000，假如该视频被播放，那么就将第6位的值改成1，01001100")])]),s._v(" "),e("li",[e("p",[s._v("统计每天有多少视频被点播"),e("br"),s._v("\n统计每天有多少视频被播放只需要查询bitmaps里面有多少位是1的数据即可")])]),s._v(" "),e("li",[e("p",[s._v("统计每周、月、年有多少视频被点播"),e("br"),s._v("\n统计每周每天对前天的数据进行统计按或操作，统计1的个数")])])]),s._v(" "),e("p",[s._v("01001110"),e("br"),s._v("\n10011101 ="),e("br"),s._v("\n11011111")]),s._v(" "),e("p",[s._v("然后再对后一天的数据进行或操作，将最后的结果统计1的个数")]),s._v(" "),e("ul",[e("li",[s._v("对指定key按位进行交、或、非、异或操作，并将结果保存到destkey中"),e("br"),s._v(" "),e("code",[s._v("bitop op destkey key1 key2 ...")])])]),s._v(" "),e("p",[s._v("op类型有：and交，or或，not非，xor异或")]),s._v(" "),e("ul",[e("li",[s._v("统计指定key中1的数量"),e("br"),s._v(" "),e("code",[s._v("bitcount key [start end]")])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201203")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201203")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201203")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setbit "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" bitcount "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201203")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当不表明结束或开始时默认全部位")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" bitcount "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" bitcount "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" bitop or 03-04 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201203")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20201204")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" bitcount 03-04\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])])]),e("h2",{attrs:{id:"hyperloglog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[s._v("#")]),s._v(" HyperLogLog")]),s._v(" "),e("p",[s._v("用于做基数统计\n比如现在有一个集合{1，1，1，1，3} 那么基数集{1，3} 基数就是2"),e("br"),s._v("\n深入LogLog算法可查看"),e("a",{attrs:{href:"https://blog.csdn.net/firenet1/article/details/77247649",target:"_blank",rel:"noopener noreferrer"}},[s._v("loglog算法"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),e("ul",[e("li",[s._v("添加数据"),e("br"),s._v(" "),e("code",[s._v("pfadd key element [element]...")])]),s._v(" "),e("li",[s._v("统计数据"),e("br"),s._v(" "),e("code",[s._v("pfcount key [key]...")])]),s._v(" "),e("li",[s._v("合并数据"),e("br"),s._v(" "),e("code",[s._v("pfmerge destkey sourcekey [sourcekey]...")])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 001\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 002\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfadd hll 002\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pfcount hll\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),e("p",[s._v("主要用于独立信息统计，比如某天访问量，使用用户id添加至hyperloglog，最后用pfcount统计，如果统计某周某月，使用pfmerge合并然后pfcount即可。")]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),e("p",[s._v("HyperLogLog只是用于基数统计，不保存数据，只记录数量"),e("br"),s._v("\n核心是基数估算算法，最终数值存在一定误差"),e("br"),s._v("\n误差范围：基数估计结果是一个带有0.81%标准错误的近似值"),e("br"),s._v("\n每个hyperloglogkey占用了12k的内存用于标记基数，消耗空间极小"),e("br"),s._v("\npfadd命令不是一次性分配12K内存使用，会随着基数增加内存组件增大"),e("br"),s._v("\npfmerge命令合并后占用的存储空间为12K,无论合并之前数据量多少")])]),s._v(" "),e("h2",{attrs:{id:"geo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#geo"}},[s._v("#")]),s._v(" GEO")]),s._v(" "),e("p",[s._v("地理位置操作")]),s._v(" "),e("h3",{attrs:{id:"基本操作-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本操作-2"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),e("ul",[e("li",[s._v("添加坐标点"),e("br"),s._v(" "),e("code",[s._v("geoadd key longitude latitude member [longitude latitude member...]")])]),s._v(" "),e("li",[s._v("获取坐标点"),e("br"),s._v(" "),e("code",[s._v("geopos key member[member ...]")])]),s._v(" "),e("li",[s._v("计算坐标点距离"),e("br"),s._v(" "),e("code",[s._v("geodist key member1 member2 [unit]")])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geoadd geos "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" a\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geoadd geos "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" b\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geopos geos a\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.99999994039535522")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.99999945914297683")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geodist geos a b\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("157270.0561")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geodist geos a b m\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("157270.0561")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geodist geos a b km\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("157.2701")]),s._v("\n")])])]),e("ul",[e("li",[s._v("根据坐标求范围内的数据"),e("br"),s._v(" "),e("code",[s._v("georadius key longitude latitude radius m|km|ft|mi [withcoord] [withdist] [withhash] [count count] [desc|asc]")])]),s._v(" "),e("li",[s._v("根据点求范围内数据"),e("br"),s._v(" "),e("code",[s._v("georadiusbymember key member radius m|km|ft|mi [withcoord] [withdist] [withhash] [count count] [desc|asc]")])]),s._v(" "),e("li",[s._v("获取指定点对应的坐标hash值"),e("br"),s._v(" "),e("code",[s._v("geohash key member[member...]")])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geoadd geos "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" c\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geoadd geos "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" d\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" georadiusbymember geos c "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("180")]),s._v(" km "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查找距离c点180km以内的点")]),s._v("\na\nd\nc\nb\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" georadiusbymember geos c "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("120")]),s._v(" km\nc\nb\na\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" georadiusbymember geos c "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" km\nc\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" georadius geos "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" km "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查找距离点（1.5， 1.5）100km以内的点")]),s._v("\nc\nb\na\nd\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" geohash geos a\ns00twy01mt0\n")])])]),e("p",[s._v("通常，使用georadiusbymember用来做定点之间的距离计算，使用georadius用来做动点到顶点的距离计算，且不用添加到geo集合内")])])}),[],!1,null,null,null);t.default=r.exports}}]);