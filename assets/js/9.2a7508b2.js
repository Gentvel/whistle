(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{495:function(t,a,_){t.exports=_.p+"assets/img/2_1cal.df863cf9.jpg"},496:function(t,a,_){t.exports=_.p+"assets/img/2_2cal.3e62cc3a.jpg"},497:function(t,a,_){t.exports=_.p+"assets/img/2_3cal.a1c2487e.jpg"},498:function(t,a,_){t.exports=_.p+"assets/img/2_4cal.33636b03.jpg"},499:function(t,a,_){t.exports=_.p+"assets/img/2_5cal.7101abf9.jpg"},500:function(t,a,_){t.exports=_.p+"assets/img/2_6cal.7a94382c.jpg"},601:function(t,a,_){"use strict";_.r(a);var s=_(4),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),s("p",[t._v("MySQL 支持的算术运算符包括加、减、乘、除和模运算。它们是最常使用、最简单的一类运算符。表4-1列出了这些运算符及其作用。")]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(495),alt:"datatype"}})])]),t._v(" "),s("h2",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("p",[t._v("当使用SELECT语句进行查询时， MySQL允许用户对表达式的左边操作数和右边操作数进行比较，比较结果为真，则返回1，为假则返回 0，比较结果不确定则返回NULL")]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(496),alt:"datatype"}})])]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(497),alt:"datatype"}})])]),t._v(" "),s("ul",[s("li",[t._v("“=”运算符，用于比较运算符两侧的操作数是否相等，如果两侧操作数相等，则返回值为1，否则为0。注意NULL不能用于“=”比较。")]),t._v(" "),s("li",[t._v("“<>”运算符，和“=”相反，如果两侧操作数不等，则值为 1，否则为 0。NULL 不能用于“<>”比较。")]),t._v(" "),s("li",[t._v("“<=>”运算符，和“=”类似，在操作数相等时值为 1，不同之处在于即使操作的值为NULL也可以正确比较。")]),t._v(" "),s("li",[t._v("“<”运算符，当左侧操作数小于右侧操作数时，其返回值为1，否则其值为0。")]),t._v(" "),s("li",[t._v("“<=”运算符，当左侧操作数小于等于右侧操作数时，其返回值为1，否则返回值为0。")]),t._v(" "),s("li",[t._v("“>”运算符，当左侧操作数大于右侧操作数时，其返回值为1，否则返回值为0。")]),t._v(" "),s("li",[t._v("“>”运算符，当左侧操作数大于右侧操作数时，其返回值为1，否则返回值为0。")]),t._v(" "),s("li",[t._v("“BETWEEN”运算符的使用格式为“a BETWEEN min AND max”，当 a大于等于min并且小于等于max，则返回值为1，否则返回0；当操作数a、min、max类型相同时，此表达式等价于（a>=min and a<=max），当操作数类型不同时，比较时会遵循类型转换原则进行转换后，再进行比较运算。")]),t._v(" "),s("li",[t._v("“IN”运算符的使用格式为“a IN (value1,value2,…)”，当 a的值存在于列表中时，则整个比较表达式返回的值为1，否则返回0。")]),t._v(" "),s("li",[t._v("IS NULL”运算符的使用格式为“a IS NULL”，当 a的值为NULL，则返回值为1，否则返回0。")]),t._v(" "),s("li",[t._v("“IS NOT NULL”运算符的使用格式为“a IS NOT NULL”。和“IS NULL”相反，当 a的值不为NULL，则返回值为1，否则返回0。")]),t._v(" "),s("li",[t._v("“LIKE”运算符的使用格式为“a LIKE %123%”，当 a中含有字符串“123”时，则返回值为1，否则返回0。")]),t._v(" "),s("li",[t._v("“REGEXP”运算符的使用格式为“str REGEXP str_pat”，当 str字符串中含有str_pat相匹配的字符串时，则返回值为1，否则返回0。")])]),t._v(" "),s("h2",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("逻辑运算符又称为布尔运算符，用来确认表达式的真和假。MySQL支持4种逻辑运算符")]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(498),alt:"datatype"}})])]),t._v(" "),s("ul",[s("li",[t._v("“NOT”或“！”表示逻辑非。返回和操作数相反的结果：当操作数为0（假），则返回值为 1，否则值为 0。但是有一点除外，那就是NOT NULL的返回值为NULL，如下例所示。")]),t._v(" "),s("li",[t._v("AND”或“&&”表示逻辑与运算。当所有操作数均为非零值并且不为NULL时，计算所得结果为1，当一个或多个操作数为0时，所得结果为0，操作数中有任何一个为NULL则返回值为NULL，如下例所示。")]),t._v(" "),s("li",[t._v("“OR”或“||”表示逻辑或运算。当两个操作数均为非NULL值时，如有任意一个操作数为非零值，则结果为1，否则结果为0。当有一个操作数为NULL时，如另一个操作数为非零值，则结果为1，否则结果为NULL。假如两个操作数均为NULL，则所得结果为NULL，如下例所示。")]),t._v(" "),s("li",[t._v("“XOR”表示逻辑异或。当任意一个操作数为NULL时，返回值为NULL。对于非NULL的操作数，如果两个的逻辑真假值相异，则返回结果1，否则返回0，如下例所示。")])]),t._v(" "),s("h2",{attrs:{id:"位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),s("p",[t._v("“XOR”表示逻辑异或。当任意一个操作数为NULL时，返回值为NULL。对于非NULL的操作数，如果两个的逻辑真假值相异，则返回结果1，否则返回0，如下例所示。")]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(499),alt:"datatype"}})])]),t._v(" "),s("ul",[s("li",[t._v("“位与”对多个操作数的二进制位做逻辑与操作，例如2&3，因为2的二进制数是10， 3是11，所有10&11的结果是10，十进制数字还是2")]),t._v(" "),s("li",[t._v("“位或”对多个操作数的二进制位做逻辑或操作，还是上面的例子，2|3的结果应该是10|11，结果还是11，应该是3")]),t._v(" "),s("li",[t._v("“位异或”对操作数的二进制位做异或操作，10^11的结果是01，结果应该是1")]),t._v(" "),s("li",[t._v("位取反”对操作数的二进制位做NOT操作，这里的操作数只能是一位")]),t._v(" "),s("li",[t._v("“位右移”对左操作数向右移动右操作数指定的位数。例如100>>3，就是对100的二进制数0001100100右移3位，左边补0，结果是0000001100，转换为二进制数是12")]),t._v(" "),s("li",[t._v("位左移”对左操作数向左移动右操作数指定的位数。例如100<<3，就是对100的二进制数0001100100左移3位，右边补0，结果是1100100000，转换为二进制数是800")])]),t._v(" "),s("h2",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),s("center",[s("p",[s("img",{attrs:{src:_(500),alt:"datatype"}})])])],1)}),[],!1,null,null,null);a.default=v.exports}}]);