/**
 * JMM（java内存模型 Java Memory Model）是一种规范，通过这个规范定义了程序中的各个变量。<br>
 * JMM中关于同步的规定：
 * <ul>
 *   <li>线程解锁前，必须把共享变量的值刷新到主内存</li>
 *   <li>线程加锁前，必须读取主内存的最新值到当前线程的工作内存</li>
 *   <li>加锁解锁使用同一把锁</li>
 * </ul>
 *
 * JMM运行程序的实体是线程，而每个线程创建时JVM都会为其创建一个工作内存（栈空间），工作内存是每个线程的私有数据区域，
 * 而java内存模型中规定所有变量都存储在主内存，主内存是共享内存区域，所有线程都可以访问，<strong>但线程对变量的操作
 * （读写）必须在工作内存中执行，首先将变量从主内存拷贝到线程的工作内存，然后对变量进行操作，操作完成后再将变量写回主内存</strong>
 * 不能直接操作主内存中的变量，各个线程中的工作内存存储着主内存变量的拷贝，因此，不同线程间无法访问对方的工作内存，线程间的通信必须通过主内存来完成。
 *
 * JMM主要保证三个特性
 * <ul>
 *   <li>可见性</li>
 *   <li>原子性</li>
 *   <li>有序性 </li>
 * </ul>
 * @author Gentvel
 * @since 1.0
 */
package com.whistle.code.thread.keyword;